# BUILD BASE IMAGE
FROM quay.io/jupyterhub/jupyterhub:latest AS stage-base

# Remove timezone information, if present (default to UTC)
RUN rm -f /etc/localtime /etc/timezone

# Install packages from distribution repos
RUN apt-get update && apt-get install --assume-yes --no-install-recommends \
  openssh-client \
  git && \
apt-get clean && \
rm -rf /var/lib/apt/lists/*

# Install packages using pip
RUN python3 -m pip install --no-cache-dir --root-user-action=ignore \
  batchspawner \
  "bricsauthenticator@git+https://github.com/isambard-sc/bricsauthenticator.git"

# Set useful environment variables
ENV JUPYTERHUB_CONFIG_DIR="/etc/jupyterhub" \
JUPYTERHUB_SRV_DIR="/srv/jupyterhub" \
JUPYTERHUB_LOG_DIR="/var/log/jupyterhub" \
JUPYTERHUB_LAUNCHER="/usr/local/bin/start-jupyterhub"

# Create JupyterHub config, srv, and log directories
# These should usually be bind-mounted to locations on the host when running the container
RUN mkdir --verbose --parents "${JUPYTERHUB_CONFIG_DIR}" "${JUPYTERHUB_SRV_DIR}" "${JUPYTERHUB_LOG_DIR}"

# Create JupyterHub launcher script: Owned by root, world-readable and executable
COPY --chmod=0755 start-jupyterhub ${JUPYTERHUB_LAUNCHER}

# Generate default configuration file and place in JupyterHub configuration directory
RUN cd "${JUPYTERHUB_CONFIG_DIR}" && jupyterhub --generate-config

# Add script to fix permissions and ownership on SSH key data mounted into container
COPY --chmod=0700 fix_ssh_perms.sh /usr/local/sbin/fix_ssh_perms.sh

WORKDIR ${JUPYTERHUB_SRV_DIR}

CMD ["/bin/sh", "-c", "/usr/local/sbin/fix_ssh_perms.sh; start-jupyterhub --debug"]

# BUILD DEV IMAGE
# Modify the base image for development
FROM stage-base AS stage-dev

ENV CONTAINER_ENV="dev"

# Create directory to hold data for development (e.g. copies of local repos)
ENV DEV_DATA_DIR=/srv/dev_data
RUN mkdir -p ${DEV_DATA_DIR}

# Copy local clone of bricsauthenticator repo from host
COPY _dev_build_data/bricsauthenticator ${DEV_DATA_DIR}/bricsauthenticator

# Remove installed bricsauthenticator and replace with local version from host
RUN python3 -m pip uninstall --yes --root-user-action=ignore bricsauthenticator && \
python3 -m pip install --no-cache-dir --root-user-action=ignore --editable \
  "${DEV_DATA_DIR}/bricsauthenticator[dev]"

# BUILD PROD IMAGE
# Modify the base image for production
FROM stage-base AS stage-prod

ENV CONTAINER_ENV="prod"
